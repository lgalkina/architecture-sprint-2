name: mongo-sharding-repl

services:
  # сервер конфигурации
  configSrv:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: configSrv
    restart: always
    ports:
      - "27017:27017"
    networks:
      app-network:
        ipv4_address: 173.17.0.10
    volumes:
      - config-data:/data/db
    command:
      [
        "--configsvr",
        "--replSet",
        "config_server",
        "--bind_ip_all",
        "--port",
        "27017"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  # 1-й шард и его реплики
  shard1-1:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: shard1-1
    restart: always
    ports:
      - "27018:27018"
    networks:
      app-network:
        ipv4_address: 173.17.0.9
    volumes:
      - shard1-1-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard1",
        "--bind_ip_all",
        "--port",
        "27018"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard1-2:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: shard1-2
    restart: always
    ports:
      - "27011:27011"
    networks:
      app-network:
        ipv4_address: 173.17.0.14
    depends_on:
      - shard1-1
    volumes:
      - shard1-2-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard1",
        "--bind_ip_all",
        "--port",
        "27011"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard1-3:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: shard1-3
    restart: always
    ports:
      - "27012:27012"
    networks:
      app-network:
        ipv4_address: 173.17.0.13
    depends_on:
      - shard1-1
    volumes:
      - shard1-3-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard1",
        "--bind_ip_all",
        "--port",
        "27012"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  # 2-й шард и его реплики
  shard2-1:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: shard2-1
    restart: always
    ports:
      - "27019:27019"
    networks:
      app-network:
        ipv4_address: 173.17.0.8
    volumes:
      - shard2-1-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard2",
        "--bind_ip_all",
        "--port",
        "27019"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard2-2:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: shard2-2
    restart: always
    ports:
      - "27024:27024"
    networks:
      app-network:
        ipv4_address: 173.17.0.12
    depends_on:
      - shard2-1
    volumes:
      - shard2-2-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard2",
        "--bind_ip_all",
        "--port",
        "27024"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard2-3:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: shard2-3
    restart: always
    ports:
      - "27025:27025"
    networks:
      app-network:
        ipv4_address: 173.17.0.11
    depends_on:
      - shard2-1
    volumes:
      - shard2-3-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard2",
        "--bind_ip_all",
        "--port",
        "27025"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  # роутер
  mongos_router:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: mongos_router
    restart: always
    ports:
      - "27020:27020"
    networks:
      app-network:
        ipv4_address: 173.17.0.7
    command:
      [
        "mongos",
        "--configdb",
        "config_server/configSrv:27017",
        "--bind_ip_all",
        "--port",
        "27020"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  pymongo_api:
    container_name: pymongo_api
    build: 
      context: api_app
      dockerfile: Dockerfile
    image: kazhem/pymongo_api:1.0.0
    depends_on:
      - mongos_router
    ports:
      - 8080:8080
    networks:
      app-network:
        ipv4_address: 173.17.0.6
    environment:
      MONGODB_URL: "mongodb://mongos_router:27020"
      MONGODB_DATABASE_NAME: "somedb"

networks:
  app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 173.17.0.0/16

volumes:
  config-data:
  shard1-1-data:
  shard1-2-data:
  shard1-3-data:
  shard2-1-data:
  shard2-2-data:
  shard2-3-data: